{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", null, \"Generate ID Card\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.nama = $event),\n    placeholder: \"Nama\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.nama]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.id = $event),\n    placeholder: \"ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.id]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.jabatan = $event),\n    placeholder: \"Jabatan\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.jabatan]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.alamat = $event),\n    placeholder: \"Alamat\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.alamat]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.generatePdf && _ctx.generatePdf(...args))\n  }, \"Generate PDF\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_cache","$event","_ctx","nama","placeholder","id","jabatan","alamat","onClick","args","generatePdf"],"sources":["C:\\Users\\IMAM\\OneDrive\\Desktop\\LPKNI\\lpkniweb\\src\\views\\pusat\\PusatcardView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Generate ID Card</h1>\r\n      <input v-model=\"nama\" placeholder=\"Nama\" />\r\n      <input v-model=\"id\" placeholder=\"ID\" />\r\n      <input v-model=\"jabatan\" placeholder=\"Jabatan\" />\r\n      <input v-model=\"alamat\" placeholder=\"Alamat\" />\r\n      <button @click=\"generatePdf\">Generate PDF</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { PDFDocument, rgb } from 'pdf-lib'; // Import rgb dari pdf-lib\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        nama: '',\r\n        id: '',\r\n        jabatan: '',\r\n        alamat: '',\r\n      };\r\n    },\r\n    methods: {\r\n      async generatePdf() {\r\n        // Memuat PDF template dari file\r\n        const existingPdfBytes = await fetch('/pusatmerah.pdf').then(res => res.arrayBuffer());\r\n  \r\n        // Membaca file PDF\r\n        const pdfDoc = await PDFDocument.load(existingPdfBytes);\r\n  \r\n        // Mengambil halaman pertama\r\n        const page = pdfDoc.getPages()[0];\r\n  \r\n        // Menggunakan font standar\r\n        const font = await pdfDoc.embedFont(PDFDocument;\r\n  \r\n        // Menambahkan teks dengan warna putih\r\n        page.drawText(this.nama, { x: 60, y: 170, size: 12, font, color: rgb(1, 1, 1) });  // warna putih\r\n        page.drawText(this.id, { x: 105, y: 125, size: 12, font, color: rgb(1, 1, 1) });    // warna putih\r\n        page.drawText(this.jabatan, { x: 105, y: 115, size: 12, font, color: rgb(1, 1, 1) });  // warna putih\r\n        page.drawText(this.alamat, { x: 105, y: 105, size: 12, font, color: rgb(1, 1, 1) });  // warna putih\r\n  \r\n        // Mendapatkan PDF yang sudah dimodifikasi\r\n        const pdfBytes = await pdfDoc.save();\r\n  \r\n        // Menyimpan atau mengunduh PDF\r\n        const pdfBlob = new Blob([pdfBytes], { type: 'application/pdf' });\r\n        const pdfUrl = URL.createObjectURL(pdfBlob);\r\n        \r\n        const link = document.createElement('a');\r\n        link.href = pdfUrl;\r\n        link.download = 'pusatmerah.pdf';\r\n        link.click();\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;uBACIA,mBAAA,CAOM,c,0BANJC,mBAAA,CAAyB,YAArB,kBAAgB,sB,gBACpBA,mBAAA,CAA2C;IAHjD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGsBC,IAAA,CAAAC,IAAI,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAlBF,IAAA,CAAAC,IAAI,E,mBACpBJ,mBAAA,CAAuC;IAJ7C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIsBC,IAAA,CAAAG,EAAE,GAAAJ,MAAA;IAAEG,WAAW,EAAC;iDAAhBF,IAAA,CAAAG,EAAE,E,mBAClBN,mBAAA,CAAiD;IALvD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKsBC,IAAA,CAAAI,OAAO,GAAAL,MAAA;IAAEG,WAAW,EAAC;iDAArBF,IAAA,CAAAI,OAAO,E,mBACvBP,mBAAA,CAA+C;IANrD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMsBC,IAAA,CAAAK,MAAM,GAAAN,MAAA;IAAEG,WAAW,EAAC;iDAApBF,IAAA,CAAAK,MAAM,E,GACtBR,mBAAA,CAAkD;IAAzCS,OAAK,EAAAR,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEP,IAAA,CAAAQ,WAAA,IAAAR,IAAA,CAAAQ,WAAA,IAAAD,IAAA,CAAW;KAAE,cAAY,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}