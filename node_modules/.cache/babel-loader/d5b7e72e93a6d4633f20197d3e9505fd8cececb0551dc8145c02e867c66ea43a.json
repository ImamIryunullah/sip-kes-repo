{"ast":null,"code":"import NavbarUser from '@/components/NavbarUser.vue';\nexport default {\n  components: {\n    NavbarUser\n  },\n  data() {\n    return {\n      amount: '',\n      // Jumlah pembayaran\n      selectedPaymentMethod: '',\n      // Metode pembayaran yang dipilih\n      transactionStatus: null // Status transaksi (success/failed)\n    };\n  },\n  methods: {\n    async processTransaction() {\n      // Validasi jika jumlah pembayaran dan metode pembayaran dipilih\n      if (!this.amount || !this.selectedPaymentMethod) {\n        alert(\"Silakan lengkapi semua data transaksi.\");\n        return;\n      }\n\n      // Proses transaksi (ini bisa Anda ganti dengan API call untuk pembayaran)\n      try {\n        // Misalnya kita akan melakukan API call ke server\n        const response = await this.fakePaymentAPI();\n\n        // Update status transaksi berdasarkan response dari server\n        if (response.success) {\n          this.transactionStatus = 'success';\n        } else {\n          this.transactionStatus = 'failed';\n        }\n      } catch (error) {\n        console.error(\"Terjadi kesalahan:\", error);\n        this.transactionStatus = 'failed';\n      }\n    },\n    // Fake payment API simulation\n    fakePaymentAPI() {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          const success = Math.random() > 0.5; // 50% chance success\n          resolve({\n            success\n          });\n        }, 2000);\n      });\n    }\n  }\n};","map":{"version":3,"names":["NavbarUser","components","data","amount","selectedPaymentMethod","transactionStatus","methods","processTransaction","alert","response","fakePaymentAPI","success","error","console","Promise","resolve","setTimeout","Math","random"],"sources":["C:\\Users\\IMAM\\OneDrive\\Desktop\\LPKNI\\lpkniweb\\src\\views\\user\\TransaksiUserView.vue"],"sourcesContent":["<template>\r\n    <div class=\"w-screen h-screen flex flex-col mt-12\">\r\n      <NavbarUser />\r\n    \r\n      <!-- Main Content Section -->\r\n      <div class=\"flex flex-col items-center p-10 bg-gray-100 flex-grow\">\r\n        <div class=\"bg-white w-full max-w-xl p-8 rounded-lg shadow-md\">\r\n          <h2 class=\"text-2xl font-semibold text-[#03a980] text-center mb-6\">Transaksi Pembayaran</h2>\r\n  \r\n          <!-- Form untuk memasukkan detail transaksi -->\r\n          <form @submit.prevent=\"processTransaction\">\r\n            <div class=\"space-y-4\">\r\n              <div>\r\n                <label for=\"amount\" class=\"block text-sm font-medium text-gray-700\">Jumlah Pembayaran</label>\r\n                <input v-model=\"amount\" id=\"amount\" type=\"number\" placeholder=\"Masukkan jumlah pembayaran\" class=\"input-field w-full\" required />\r\n              </div>\r\n              <div>\r\n                <label for=\"paymentMethod\" class=\"block text-sm font-medium text-gray-700\">Metode Pembayaran</label>\r\n                <select v-model=\"selectedPaymentMethod\" id=\"paymentMethod\" class=\"input-field w-full\" required>\r\n                  <option disabled value=\"\">Pilih Metode Pembayaran</option>\r\n                  <option value=\"Transfer Bank\">Transfer Bank</option>\r\n                  <option value=\"Kartu Kredit\">Kartu Kredit</option>\r\n                  <option value=\"E-wallet\">E-wallet</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n  \r\n            <!-- Tombol untuk melakukan pembayaran -->\r\n            <button type=\"submit\" class=\"mt-6 w-full bg-[#03a980] text-white px-6 py-2 rounded-lg font-semibold hover:bg-[#028a66] transition\">\r\n              Bayar Sekarang\r\n            </button>\r\n          </form>\r\n  \r\n          <!-- Konfirmasi Pembayaran -->\r\n          <div v-if=\"transactionStatus\" class=\"mt-6 text-center\">\r\n            <p v-if=\"transactionStatus === 'success'\" class=\"text-green-500\">Pembayaran berhasil! Terima kasih.</p>\r\n            <p v-if=\"transactionStatus === 'failed'\" class=\"text-red-500\">Pembayaran gagal. Silakan coba lagi.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import NavbarUser from '@/components/NavbarUser.vue';\r\n  \r\n  export default {\r\n    components: {\r\n      NavbarUser\r\n    },\r\n    data() {\r\n      return {\r\n        amount: '', // Jumlah pembayaran\r\n        selectedPaymentMethod: '', // Metode pembayaran yang dipilih\r\n        transactionStatus: null, // Status transaksi (success/failed)\r\n      };\r\n    },\r\n    methods: {\r\n      async processTransaction() {\r\n        // Validasi jika jumlah pembayaran dan metode pembayaran dipilih\r\n        if (!this.amount || !this.selectedPaymentMethod) {\r\n          alert(\"Silakan lengkapi semua data transaksi.\");\r\n          return;\r\n        }\r\n  \r\n        // Proses transaksi (ini bisa Anda ganti dengan API call untuk pembayaran)\r\n        try {\r\n          // Misalnya kita akan melakukan API call ke server\r\n          const response = await this.fakePaymentAPI();\r\n  \r\n          // Update status transaksi berdasarkan response dari server\r\n          if (response.success) {\r\n            this.transactionStatus = 'success';\r\n          } else {\r\n            this.transactionStatus = 'failed';\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Terjadi kesalahan:\", error);\r\n          this.transactionStatus = 'failed';\r\n        }\r\n      },\r\n  \r\n      // Fake payment API simulation\r\n      fakePaymentAPI() {\r\n        return new Promise((resolve) => {\r\n          setTimeout(() => {\r\n            const success = Math.random() > 0.5; // 50% chance success\r\n            resolve({ success });\r\n          }, 2000);\r\n        });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Styling untuk form input dan tombol */\r\n  .input-field {\r\n    @apply p-3 border border-gray-300 rounded-lg bg-gray-100 focus:outline-none focus:ring-2 focus:ring-[#03a980];\r\n  }\r\n  \r\n  /* Styling untuk form dan tombol */\r\n  button {\r\n    @apply p-3 bg-[#03a980] text-white rounded-lg font-semibold hover:bg-[#028a66] transition;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA4CE,OAAOA,UAAS,MAAO,6BAA6B;AAEpD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MAAE;MACZC,qBAAqB,EAAE,EAAE;MAAE;MAC3BC,iBAAiB,EAAE,IAAI,CAAE;IAC3B,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,kBAAkBA,CAAA,EAAG;MACzB;MACA,IAAI,CAAC,IAAI,CAACJ,MAAK,IAAK,CAAC,IAAI,CAACC,qBAAqB,EAAE;QAC/CI,KAAK,CAAC,wCAAwC,CAAC;QAC/C;MACF;;MAEA;MACA,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;;QAE5C;QACA,IAAID,QAAQ,CAACE,OAAO,EAAE;UACpB,IAAI,CAACN,iBAAgB,GAAI,SAAS;QACpC,OAAO;UACL,IAAI,CAACA,iBAAgB,GAAI,QAAQ;QACnC;MACF,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C,IAAI,CAACP,iBAAgB,GAAI,QAAQ;MACnC;IACF,CAAC;IAED;IACAK,cAAcA,CAAA,EAAG;MACf,OAAO,IAAII,OAAO,CAAEC,OAAO,IAAK;QAC9BC,UAAU,CAAC,MAAM;UACf,MAAML,OAAM,GAAIM,IAAI,CAACC,MAAM,CAAC,IAAI,GAAG,EAAE;UACrCH,OAAO,CAAC;YAAEJ;UAAQ,CAAC,CAAC;QACtB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}