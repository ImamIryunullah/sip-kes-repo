{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavbarUser from '@/components/NavbarUser.vue';\nexport default {\n  components: {\n    NavbarUser\n  },\n  data() {\n    return {\n      // Riwayat pengajuan hanya untuk pengguna yang sedang login\n      riwayat: []\n    };\n  },\n  mounted() {\n    this.fetchRiwayat(); // Ambil riwayat pengajuan saat halaman dimuat\n  },\n  methods: {\n    // Fungsi untuk mengambil riwayat berdasarkan ID pengguna (misalnya dari API)\n    async fetchRiwayat() {\n      // Simulasi pengambilan data berdasarkan ID pengguna\n      const userId = this.$store.state.user.id; // Asumsi menggunakan Vuex untuk state management\n\n      // Data dummy berdasarkan ID pengguna\n      const riwayatData = [{\n        nama: \"John Doe\",\n        provinsi: \"Jawa Timur\",\n        kotaKabupaten: \"Kota Malang\",\n        status: \"Diproses\"\n      }, {\n        nama: \"Jane Smith\",\n        provinsi: \"NTB\",\n        kotaKabupaten: \"Mataram\",\n        status: \"Disetujui\"\n      }, {\n        nama: \"Robert Brown\",\n        provinsi: \"Sumatera Barat\",\n        kotaKabupaten: \"Padang\",\n        status: \"Ditolak\"\n      }];\n\n      // Misalnya, kita hanya ingin menampilkan riwayat yang sesuai dengan ID pengguna yang sedang login\n      const userRiwayat = riwayatData.filter(item => item.nama === \"John Doe\"); // Mengganti dengan logika sesuai ID pengguna\n\n      this.riwayat = userRiwayat;\n    },\n    // Fungsi untuk menentukan kelas status berdasarkan status pendaftaran\n    getStatusClass(status) {\n      switch (status) {\n        case \"Diproses\":\n          return \"text-yellow-500\";\n        case \"Disetujui\":\n          return \"text-green-500\";\n        case \"Ditolak\":\n          return \"text-red-500\";\n        default:\n          return \"text-gray-500\";\n      }\n    },\n    logout() {\n      alert(\"You have been logged out.\");\n      this.$router.push(\"/login\");\n    }\n  }\n};","map":{"version":3,"names":["NavbarUser","components","data","riwayat","mounted","fetchRiwayat","methods","userId","$store","state","user","id","riwayatData","nama","provinsi","kotaKabupaten","status","userRiwayat","filter","item","getStatusClass","logout","alert","$router","push"],"sources":["C:\\Users\\IMAM\\OneDrive\\Desktop\\LPKNI\\lpkniweb\\src\\views\\user\\RiwayatPengajuan.vue"],"sourcesContent":["<template>\r\n  <div class=\"w-screen h-screen flex flex-col mt-12\">\r\n    <NavbarUser />\r\n\r\n    <div class=\"flex flex-col items-center p-10 bg-gray-100 flex-grow\">\r\n      <div class=\"bg-white w-full max-w-3xl p-6 rounded-lg shadow-md\">\r\n        <h2 class=\"text-2xl font-semibold text-[#03a980] text-center mb-6\">Riwayat Pengajuan Pendaftaran Anggota</h2>\r\n\r\n        <div v-if=\"riwayat && riwayat.length > 0\" class=\"space-y-4\">\r\n          <div v-for=\"(item, index) in riwayat\" :key=\"index\" class=\"p-4 bg-gray-50 rounded-lg shadow-md border border-gray-300\">\r\n            <p><strong>Nama:</strong> {{ item.nama }}</p>\r\n            <p><strong>Provinsi:</strong> {{ item.provinsi }}</p>\r\n            <p><strong>Kota/Kabupaten:</strong> {{ item.kotaKabupaten }}</p>\r\n            <p><strong>Status:</strong> <span :class=\"getStatusClass(item.status)\">{{ item.status }}</span></p>\r\n            <p v-if=\"item.status === 'Disetujui'\">Status: <span class=\"text-green-500\">Disetujui oleh pusat.</span></p>\r\n            <p v-if=\"item.status === 'Ditolak'\">Status: <span class=\"text-red-500\">Ditolak oleh pusat.</span></p>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else class=\"text-center text-gray-500\">Belum ada pengajuan pendaftaran anggota.</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavbarUser from '@/components/NavbarUser.vue';\r\n\r\nexport default {\r\n  components: {\r\n    NavbarUser,\r\n  },\r\n  data() {\r\n    return {\r\n      // Riwayat pengajuan hanya untuk pengguna yang sedang login\r\n      riwayat: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchRiwayat(); // Ambil riwayat pengajuan saat halaman dimuat\r\n  },\r\n  methods: {\r\n    // Fungsi untuk mengambil riwayat berdasarkan ID pengguna (misalnya dari API)\r\n    async fetchRiwayat() {\r\n      // Simulasi pengambilan data berdasarkan ID pengguna\r\n      const userId = this.$store.state.user.id; // Asumsi menggunakan Vuex untuk state management\r\n\r\n      // Data dummy berdasarkan ID pengguna\r\n      const riwayatData = [\r\n        {\r\n          nama: \"John Doe\",\r\n          provinsi: \"Jawa Timur\",\r\n          kotaKabupaten: \"Kota Malang\",\r\n          status: \"Diproses\",\r\n        },\r\n        {\r\n          nama: \"Jane Smith\",\r\n          provinsi: \"NTB\",\r\n          kotaKabupaten: \"Mataram\",\r\n          status: \"Disetujui\",\r\n        },\r\n        {\r\n          nama: \"Robert Brown\",\r\n          provinsi: \"Sumatera Barat\",\r\n          kotaKabupaten: \"Padang\",\r\n          status: \"Ditolak\",\r\n        }\r\n      ];\r\n\r\n      // Misalnya, kita hanya ingin menampilkan riwayat yang sesuai dengan ID pengguna yang sedang login\r\n      const userRiwayat = riwayatData.filter(item => item.nama === \"John Doe\"); // Mengganti dengan logika sesuai ID pengguna\r\n\r\n      this.riwayat = userRiwayat;\r\n    },\r\n\r\n    // Fungsi untuk menentukan kelas status berdasarkan status pendaftaran\r\n    getStatusClass(status) {\r\n      switch (status) {\r\n        case \"Diproses\":\r\n          return \"text-yellow-500\";\r\n        case \"Disetujui\":\r\n          return \"text-green-500\";\r\n        case \"Ditolak\":\r\n          return \"text-red-500\";\r\n        default:\r\n          return \"text-gray-500\";\r\n      }\r\n    },\r\n\r\n    logout() {\r\n      alert(\"You have been logged out.\");\r\n      this.$router.push(\"/login\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styling untuk tabel dan riwayat pengajuan */\r\n.input-field {\r\n  @apply w-full p-3 border border-gray-300 rounded-lg bg-gray-100 focus:outline-none;\r\n}\r\n</style>\r\n"],"mappings":";AA0BA,OAAOA,UAAS,MAAO,6BAA6B;AAEpD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;EACvB,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMD,YAAYA,CAAA,EAAG;MACnB;MACA,MAAME,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,EAAE,EAAE;;MAE1C;MACA,MAAMC,WAAU,GAAI,CAClB;QACEC,IAAI,EAAE,UAAU;QAChBC,QAAQ,EAAE,YAAY;QACtBC,aAAa,EAAE,aAAa;QAC5BC,MAAM,EAAE;MACV,CAAC,EACD;QACEH,IAAI,EAAE,YAAY;QAClBC,QAAQ,EAAE,KAAK;QACfC,aAAa,EAAE,SAAS;QACxBC,MAAM,EAAE;MACV,CAAC,EACD;QACEH,IAAI,EAAE,cAAc;QACpBC,QAAQ,EAAE,gBAAgB;QAC1BC,aAAa,EAAE,QAAQ;QACvBC,MAAM,EAAE;MACV,EACD;;MAED;MACA,MAAMC,WAAU,GAAIL,WAAW,CAACM,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACN,IAAG,KAAM,UAAU,CAAC,EAAE;;MAE1E,IAAI,CAACV,OAAM,GAAIc,WAAW;IAC5B,CAAC;IAED;IACAG,cAAcA,CAACJ,MAAM,EAAE;MACrB,QAAQA,MAAM;QACZ,KAAK,UAAU;UACb,OAAO,iBAAiB;QAC1B,KAAK,WAAW;UACd,OAAO,gBAAgB;QACzB,KAAK,SAAS;UACZ,OAAO,cAAc;QACvB;UACE,OAAO,eAAe;MAC1B;IACF,CAAC;IAEDK,MAAMA,CAAA,EAAG;MACPC,KAAK,CAAC,2BAA2B,CAAC;MAClC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}