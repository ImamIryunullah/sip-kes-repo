{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { PDFDocument, rgb } from 'pdf-lib'; // Import rgb dari pdf-lib\n\nexport default {\n  data() {\n    return {\n      nama: '',\n      id: '',\n      jabatan: '',\n      alamat: ''\n    };\n  },\n  methods: {\n    async generatePdf() {\n      const existingPdfBytes = await fetch('/pusatmerah.pdf').then(res => res.arrayBuffer());\n      const pdfDoc = await PDFDocument.load(existingPdfBytes);\n      const page = pdfDoc.getPages()[0];\n      page.drawText(this.nama, {\n        x: 70,\n        y: 170,\n        size: 12,\n        color: rgb(1, 1, 1)\n      });\n      page.drawText(this.id, {\n        x: 105,\n        y: 125,\n        size: 12,\n        color: rgb(1, 1, 1)\n      });\n      page.drawText(this.jabatan, {\n        x: 150,\n        y: 610,\n        size: 12,\n        color: rgb(1, 1, 1)\n      });\n      page.drawText(this.alamat, {\n        x: 150,\n        y: 610,\n        size: 12,\n        color: rgb(1, 1, 1)\n      });\n      const pdfBytes = await pdfDoc.save();\n      const pdfBlob = new Blob([pdfBytes], {\n        type: 'application/pdf'\n      });\n      const pdfUrl = URL.createObjectURL(pdfBlob);\n      const link = document.createElement('a');\n      link.href = pdfUrl;\n      link.download = 'pusatmerah.pdf';\n      link.click();\n    }\n  }\n};","map":{"version":3,"names":["PDFDocument","rgb","data","nama","id","jabatan","alamat","methods","generatePdf","existingPdfBytes","fetch","then","res","arrayBuffer","pdfDoc","load","page","getPages","drawText","x","y","size","color","pdfBytes","save","pdfBlob","Blob","type","pdfUrl","URL","createObjectURL","link","document","createElement","href","download","click"],"sources":["C:\\Users\\IMAM\\OneDrive\\Desktop\\LPKNI\\lpkniweb\\src\\components\\GeneratePdf.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Generate ID Card</h1>\r\n      <input v-model=\"nama\" placeholder=\"Nama\" />\r\n      <input v-model=\"id\" placeholder=\"ID\" />\r\n      <input v-model=\"jabatan\" placeholder=\"Jabatan\" />\r\n      <input v-model=\"\" placeholder=\"Jabatan\" />\r\n      <button @click=\"generatePdf\">Generate PDF</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { PDFDocument, rgb } from 'pdf-lib'; // Import rgb dari pdf-lib\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        nama: '',\r\n        id: '',\r\n        jabatan: '',\r\n        alamat: '',\r\n      };\r\n    },\r\n    methods: {\r\n      async generatePdf() {\r\n        \r\n        const existingPdfBytes = await fetch('/pusatmerah.pdf').then(res => res.arrayBuffer());\r\n  \r\n        \r\n        const pdfDoc = await PDFDocument.load(existingPdfBytes);\r\n        \r\n        \r\n        const page = pdfDoc.getPages()[0];\r\n  \r\n        \r\n        \r\n  \r\n        \r\n        page.drawText(this.nama, { x:70, y: 170, size: 12,color: rgb (1,1,1) });\r\n        page.drawText(this.id, { x: 105, y: 125, size: 12, color: rgb (1,1,1) });\r\n        page.drawText(this.jabatan, { x: 150, y: 610, size: 12, color: rgb (1,1,1) });\r\n        page.drawText(this.alamat, { x: 150, y: 610, size: 12, color: rgb (1,1,1) });\r\n  \r\n        \r\n        const pdfBytes = await pdfDoc.save();\r\n  \r\n        \r\n        const pdfBlob = new Blob([pdfBytes], { type: 'application/pdf' });\r\n        const pdfUrl = URL.createObjectURL(pdfBlob);\r\n        \r\n        const link = document.createElement('a');\r\n        link.href = pdfUrl;\r\n        link.download = 'pusatmerah.pdf';\r\n        link.click();\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;;AAYE,SAASA,WAAW,EAAEC,GAAE,QAAS,SAAS,EAAE;;AAE5C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,EAAE,EAAE,EAAE;MACNC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAElB,MAAMC,gBAAe,GAAI,MAAMC,KAAK,CAAC,iBAAiB,CAAC,CAACC,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,WAAW,CAAC,CAAC,CAAC;MAGtF,MAAMC,MAAK,GAAI,MAAMd,WAAW,CAACe,IAAI,CAACN,gBAAgB,CAAC;MAGvD,MAAMO,IAAG,GAAIF,MAAM,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MAMjCD,IAAI,CAACE,QAAQ,CAAC,IAAI,CAACf,IAAI,EAAE;QAAEgB,CAAC,EAAC,EAAE;QAAEC,CAAC,EAAE,GAAG;QAAEC,IAAI,EAAE,EAAE;QAACC,KAAK,EAAErB,GAAE,CAAG,CAAC,EAAC,CAAC,EAAC,CAAC;MAAE,CAAC,CAAC;MACvEe,IAAI,CAACE,QAAQ,CAAC,IAAI,CAACd,EAAE,EAAE;QAAEe,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE,GAAG;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAErB,GAAE,CAAG,CAAC,EAAC,CAAC,EAAC,CAAC;MAAE,CAAC,CAAC;MACxEe,IAAI,CAACE,QAAQ,CAAC,IAAI,CAACb,OAAO,EAAE;QAAEc,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE,GAAG;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAErB,GAAE,CAAG,CAAC,EAAC,CAAC,EAAC,CAAC;MAAE,CAAC,CAAC;MAC7Ee,IAAI,CAACE,QAAQ,CAAC,IAAI,CAACZ,MAAM,EAAE;QAAEa,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE,GAAG;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAErB,GAAE,CAAG,CAAC,EAAC,CAAC,EAAC,CAAC;MAAE,CAAC,CAAC;MAG5E,MAAMsB,QAAO,GAAI,MAAMT,MAAM,CAACU,IAAI,CAAC,CAAC;MAGpC,MAAMC,OAAM,GAAI,IAAIC,IAAI,CAAC,CAACH,QAAQ,CAAC,EAAE;QAAEI,IAAI,EAAE;MAAkB,CAAC,CAAC;MACjE,MAAMC,MAAK,GAAIC,GAAG,CAACC,eAAe,CAACL,OAAO,CAAC;MAE3C,MAAMM,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAG,GAAIN,MAAM;MAClBG,IAAI,CAACI,QAAO,GAAI,gBAAgB;MAChCJ,IAAI,CAACK,KAAK,CAAC,CAAC;IACd;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}