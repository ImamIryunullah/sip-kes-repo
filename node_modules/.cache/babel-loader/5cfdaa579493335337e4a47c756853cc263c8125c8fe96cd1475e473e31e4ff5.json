{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Generate ID Card\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.nama = $event),\n    placeholder: \"Nama\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.nama]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.id = $event),\n    placeholder: \"ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.id]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.jabatan = $event),\n    placeholder: \"Jabatan\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.jabatan]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.generatePdf && $options.generatePdf(...args))\n  }, \"Generate PDF\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_cache","$event","$data","nama","placeholder","id","jabatan","onClick","args","$options","generatePdf"],"sources":["C:\\Users\\IMAM\\OneDrive\\Desktop\\LPKNI\\lpkniweb\\src\\components\\GeneratePdf.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Generate ID Card</h1>\r\n      <input v-model=\"nama\" placeholder=\"Nama\" />\r\n      <input v-model=\"id\" placeholder=\"ID\" />\r\n      <input v-model=\"jabatan\" placeholder=\"Jabatan\" />\r\n      <button @click=\"generatePdf\">Generate PDF</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { PDFDocument } from 'pdf-lib';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        nama: '',\r\n        id: '',\r\n        jabatan: '',\r\n      };\r\n    },\r\n    methods: {\r\n      async generatePdf() {\r\n        \r\n        const existingPdfBytes = await fetch('/pusatmerah.pdf').then(res => res.arrayBuffer());\r\n  \r\n        \r\n        const pdfDoc = await PDFDocument.load(existingPdfBytes);\r\n        \r\n        \r\n        const page = pdfDoc.getPages()[0];\r\n  \r\n        \r\n        \r\n  \r\n        \r\n        page.drawText(this.nama, { x:90, y: 100, size: 14,  });\r\n        page.drawText(this.id, { x: 150, y: 630, size: 12,  });\r\n        page.drawText(this.jabatan, { x: 150, y: 610, size: 12,  });\r\n  \r\n        \r\n        const pdfBytes = await pdfDoc.save();\r\n  \r\n        \r\n        const pdfBlob = new Blob([pdfBytes], { type: 'application/pdf' });\r\n        const pdfUrl = URL.createObjectURL(pdfBlob);\r\n        \r\n        const link = document.createElement('a');\r\n        link.href = pdfUrl;\r\n        link.download = 'pusatmerah.pdf';\r\n        link.click();\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;uBACIA,mBAAA,CAMM,c,0BALJC,mBAAA,CAAyB,YAArB,kBAAgB,sB,gBACpBA,mBAAA,CAA2C;IAHjD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGsBC,KAAA,CAAAC,IAAI,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAlBF,KAAA,CAAAC,IAAI,E,mBACpBJ,mBAAA,CAAuC;IAJ7C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIsBC,KAAA,CAAAG,EAAE,GAAAJ,MAAA;IAAEG,WAAW,EAAC;iDAAhBF,KAAA,CAAAG,EAAE,E,mBAClBN,mBAAA,CAAiD;IALvD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKsBC,KAAA,CAAAI,OAAO,GAAAL,MAAA;IAAEG,WAAW,EAAC;iDAArBF,KAAA,CAAAI,OAAO,E,GACvBP,mBAAA,CAAkD;IAAzCQ,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,cAAY,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}