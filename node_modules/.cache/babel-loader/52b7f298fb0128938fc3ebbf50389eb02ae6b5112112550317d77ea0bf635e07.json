{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport NavbarUser from '@/components/NavbarUser.vue';\nimport ApiService from '@/service/api.js'; // Import the API service\n\nexport default {\n  components: {\n    NavbarUser\n  },\n  data() {\n    return {\n      userData: {\n        nama: \"\",\n        nik: \"\",\n        noTelepon: \"\",\n        email: \"\",\n        tipeuser: \"\",\n        provinsi: \"\",\n        kotaKabupaten: \"\",\n        jabatan: \"\",\n        alamat: \"\",\n        foto3x4: null,\n        fotoKtp: null\n      },\n      jabatanProvinsi: [\"Staf Ahli / Komisioner\", \"Sekretariat\", \"Direktorat, pendidikan, latihan, SDM & LPKSM\", \"Direktorat BPSK\", \"Perhimpunan Driver Online Indonesia (PDOI), Lembaga Bantuan Hukum Nasional Indonesia (LBH-NI)\", \"Direktorat Pengawasan Makanan dan Obat\", \"Direktorat Pengawasan bank, finance dan koperasi\", \"Direktorat media & komunikasi (suara konsumen)\", \"Direktorat standarisasi warung & sertifikasi\", \"Perhimpunan Bekam Nasional Indonesia (PBNI)\"],\n      jabatanKotaKabupaten: [\"Staf Ahli / Komisioner\", \"Sekretariat\", \"Biro Pendidikan, Latihan, SDM & LPKSM\", \"Biro BPSK\", \"Perhimpunan Driver Online Indonesia (PDOI)\", \"Lembaga Bantuan Hukum Nasional Indonesia (LBH-NI)\", \"Biro Pengawasan Makanan dan Obat\", \"Biro Pengawasan Bank Finance & Koperasi\", \"Biro media & komunikasi (suara konsumen)\", \"Biro Standarisasi Warung & Sertifikasi\", \"Perhimpunan Bekam Nasional Indonesia (PBNI)\"],\n      provinces: [],\n      // To store the list of provinces\n      isLoading: false // Adding loading state\n    };\n  },\n  computed: {\n    jabatanOptions() {\n      if (this.userData.tipeuser === 'Provinsi') {\n        return this.jabatanProvinsi;\n      } else if (this.userData.tipeuser === 'Kota/Kabupaten') {\n        return this.jabatanKotaKabupaten;\n      } else {\n        return [];\n      }\n    }\n  },\n  mounted() {\n    this.fetchWilayah(); // Fetch provinces when component is mounted\n  },\n  methods: {\n    handleFoto3x4Upload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.userData.foto3x4 = file;\n      }\n    },\n    handleKtpUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.userData.fotoKtp = file;\n      }\n    },\n    async fetchWilayah() {\n      try {\n        const response = await ApiService.getWilayah(); // Fetching the list of provinces\n        this.provinces = response.data.map(wilayah => wilayah.nama_wilayah, wilayah.kode_wilayah); // Extracting province names\n      } catch (error) {\n        console.error(\"Error fetching wilayah:\", error);\n        alert(\"Terjadi kesalahan saat mengambil data wilayah.\");\n      }\n    },\n    async submitPendaftaran() {\n      this.isLoading = true; // Set loading to true while submitting\n      const formData = new FormData();\n      formData.append(\"nama\", this.userData.nama);\n      formData.append(\"nik\", this.userData.nik);\n      formData.append(\"noTelepon\", this.userData.noTelepon);\n      formData.append(\"email\", this.userData.email);\n      formData.append(\"tipePendaftaran\", this.userData.tipePendaftaran);\n      formData.append(\"provinsi\", this.userData.provinsi);\n      formData.append(\"kotaKabupaten\", this.userData.kotaKabupaten);\n      formData.append(\"jabatan\", this.userData.jabatan);\n      formData.append(\"alamat\", this.userData.alamat);\n      formData.append(\"foto3x4\", this.userData.foto3x4);\n      formData.append(\"fotoKtp\", this.userData.fotoKtp);\n      try {\n        // Send the form data to the server\n        await ApiService.submitPendaftaran(formData);\n        this.$router.push({\n          name: 'success'\n        }); // Redirect to success page\n      } catch (error) {\n        console.error(\"Pendaftaran failed:\", error);\n        alert(\"Pendaftaran gagal. Silakan coba lagi.\");\n      } finally {\n        this.isLoading = false; // Set loading to false after submission\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavbarUser","ApiService","components","data","userData","nama","nik","noTelepon","email","tipeuser","provinsi","kotaKabupaten","jabatan","alamat","foto3x4","fotoKtp","jabatanProvinsi","jabatanKotaKabupaten","provinces","isLoading","computed","jabatanOptions","mounted","fetchWilayah","methods","handleFoto3x4Upload","event","file","target","files","handleKtpUpload","response","getWilayah","map","wilayah","nama_wilayah","kode_wilayah","error","console","alert","submitPendaftaran","formData","FormData","append","tipePendaftaran","$router","push","name"],"sources":["C:\\Users\\IMAM\\OneDrive\\Desktop\\LPKNI\\lpkniweb\\src\\views\\user\\PendaftaranAnggotaView.vue"],"sourcesContent":["<template>\r\n  <div class=\"w-screen h-screen flex flex-col mt-5\">\r\n    <!-- Navbar -->\r\n    <NavbarUser />\r\n\r\n    <div class=\"flex flex-col items-center p-10 bg-gray-100 flex-grow mt-10\">\r\n      <div class=\"bg-white w-full max-w-2xl p-6 rounded-lg shadow-md\">\r\n        <h2 class=\"text-2xl font-semibold text-[#03a980] text-center mb-6\">Pendaftaran Anggota</h2>\r\n\r\n        <!-- Form Pendaftaran -->\r\n        <form @submit.prevent=\"submitPendaftaran\">\r\n          <div class=\"grid grid-cols-1 gap-4\">\r\n            <input v-model=\"userData.nama\" type=\"text\" placeholder=\"Nama Lengkap\" class=\"input-field\" required />\r\n            <input v-model=\"userData.nik\" type=\"text\" placeholder=\"NIK\" class=\"input-field\" required />\r\n            <input v-model=\"userData.noTelepon\" type=\"text\" placeholder=\"Nomor Telepon\" class=\"input-field\" required />\r\n            <input v-model=\"userData.email\" type=\"email\" placeholder=\"Email\" class=\"input-field\" required />\r\n            \r\n            <!-- Pilih untuk Daftar Provinsi atau Kota/Kabupaten -->\r\n            <select v-model=\"userData.tipeuser\" class=\"input-field\" required>\r\n              <option disabled value=\"\">Pilih Tipe user</option>\r\n              <option value=\"Provinsi\">Provinsi</option>\r\n              <option value=\"Kota/Kabupaten\">Kota/Kabupaten</option>\r\n            </select>\r\n\r\n            <!-- Provinsi -->\r\n            <select v-if=\"userData.tipeuser === 'Provinsi'\" v-model=\"userData.provinsi\" class=\"input-field\" required>\r\n              <option disabled value=\"\">Pilih Provinsi</option>\r\n              <option v-for=\"provinsi in provinces\" :key=\"provinsi.id_wilayah\" :value=\"provinsi.nama_wilayah\">\r\n                {{ provinsi.nama_wilayah }}\r\n              </option>\r\n            </select>\r\n\r\n            <!-- Kota/Kabupaten hanya muncul jika tipe pendaftaran adalah Kota/Kabupaten -->\r\n            <select v-if=\"userData.tipeuser === 'Kota/Kabupaten'\" v-model=\"userData.kotaKabupaten\" class=\"input-field\" required>\r\n              <option disabled value=\"\">Pilih Kota/Kabupaten</option>\r\n              <option value=\"Kota Malang\">Kota Malang</option>\r\n              <option value=\"Surabaya\">Surabaya</option>\r\n              <option value=\"Gresik\">Gresik</option>\r\n            </select>\r\n\r\n            <!-- Jabatan LPKNI -->\r\n            <select v-model=\"userData.jabatan\" class=\"input-field\" required>\r\n              <option disabled value=\"\">Pilih Jabatan LPKNI</option>\r\n              <option v-for=\"jabatan in jabatanOptions\" :key=\"jabatan\" :value=\"jabatan\">{{ jabatan }}</option>\r\n            </select>\r\n\r\n            <input v-model=\"userData.alamat\" type=\"text\" placeholder=\"Alamat Lengkap\" class=\"input-field\" required />\r\n            \r\n            <!-- Upload Foto 3x4 -->\r\n            <label class=\"text-sm text-gray-600\">Upload Foto 3x4:</label>\r\n            <input type=\"file\" @change=\"handleFoto3x4Upload\" class=\"input-field\" required />\r\n\r\n            <!-- Upload Foto KTP -->\r\n            <label class=\"text-sm text-gray-600\">Upload Foto KTP:</label>\r\n            <input type=\"file\" @change=\"handleKtpUpload\" class=\"input-field\" required />\r\n\r\n            <button type=\"submit\" class=\"mt-6 w-full bg-[#03a980] text-white px-6 py-2 rounded-lg font-bold hover:bg-[#028a66] transition\">\r\n              Ajukan Pendaftaran\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavbarUser from '@/components/NavbarUser.vue';\r\nimport ApiService from '@/service/api.js'; // Import the API service\r\n\r\nexport default {\r\n  components: {\r\n    NavbarUser\r\n  },\r\n  data() {\r\n    return {\r\n      userData: {\r\n        nama: \"\",\r\n        nik: \"\",\r\n        noTelepon: \"\",\r\n        email: \"\",\r\n        tipeuser: \"\",\r\n        provinsi: \"\",\r\n        kotaKabupaten: \"\",\r\n        jabatan: \"\",\r\n        alamat: \"\",\r\n        foto3x4: null,\r\n        fotoKtp: null,\r\n      },\r\n      jabatanProvinsi: [\r\n        \"Staf Ahli / Komisioner\",\r\n        \"Sekretariat\",\r\n        \"Direktorat, pendidikan, latihan, SDM & LPKSM\",\r\n        \"Direktorat BPSK\",\r\n        \"Perhimpunan Driver Online Indonesia (PDOI), Lembaga Bantuan Hukum Nasional Indonesia (LBH-NI)\",\r\n        \"Direktorat Pengawasan Makanan dan Obat\",\r\n        \"Direktorat Pengawasan bank, finance dan koperasi\",\r\n        \"Direktorat media & komunikasi (suara konsumen)\",\r\n        \"Direktorat standarisasi warung & sertifikasi\",\r\n        \"Perhimpunan Bekam Nasional Indonesia (PBNI)\"\r\n      ],\r\n      jabatanKotaKabupaten: [\r\n        \"Staf Ahli / Komisioner\",\r\n        \"Sekretariat\",\r\n        \"Biro Pendidikan, Latihan, SDM & LPKSM\",\r\n        \"Biro BPSK\",\r\n        \"Perhimpunan Driver Online Indonesia (PDOI)\",\r\n        \"Lembaga Bantuan Hukum Nasional Indonesia (LBH-NI)\",\r\n        \"Biro Pengawasan Makanan dan Obat\",\r\n        \"Biro Pengawasan Bank Finance & Koperasi\",\r\n        \"Biro media & komunikasi (suara konsumen)\",\r\n        \"Biro Standarisasi Warung & Sertifikasi\",\r\n        \"Perhimpunan Bekam Nasional Indonesia (PBNI)\"\r\n      ],\r\n      provinces: [], // To store the list of provinces\r\n      isLoading: false // Adding loading state\r\n    };\r\n  },\r\n  computed: {\r\n    jabatanOptions() {\r\n      if (this.userData.tipeuser === 'Provinsi') {\r\n        return this.jabatanProvinsi;\r\n      } else if (this.userData.tipeuser === 'Kota/Kabupaten') {\r\n        return this.jabatanKotaKabupaten;\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchWilayah(); // Fetch provinces when component is mounted\r\n  },\r\n  methods: {\r\n    handleFoto3x4Upload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        this.userData.foto3x4 = file;\r\n      }\r\n    },\r\n    handleKtpUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        this.userData.fotoKtp = file;\r\n      }\r\n    },\r\n\r\n    async fetchWilayah() {\r\n      try {\r\n        const response = await ApiService.getWilayah(); // Fetching the list of provinces\r\n        this.provinces = response.data.map(wilayah => wilayah.nama_wilayah, wilayah.kode_wilayah); // Extracting province names\r\n      } catch (error) {\r\n        console.error(\"Error fetching wilayah:\", error);\r\n        alert(\"Terjadi kesalahan saat mengambil data wilayah.\");\r\n      }\r\n    },\r\n\r\n    async submitPendaftaran() {\r\n      this.isLoading = true; // Set loading to true while submitting\r\n      const formData = new FormData();\r\n      formData.append(\"nama\", this.userData.nama);\r\n      formData.append(\"nik\", this.userData.nik);\r\n      formData.append(\"noTelepon\", this.userData.noTelepon);\r\n      formData.append(\"email\", this.userData.email);\r\n      formData.append(\"tipePendaftaran\", this.userData.tipePendaftaran);\r\n      formData.append(\"provinsi\", this.userData.provinsi);\r\n      formData.append(\"kotaKabupaten\", this.userData.kotaKabupaten);\r\n      formData.append(\"jabatan\", this.userData.jabatan);\r\n      formData.append(\"alamat\", this.userData.alamat);\r\n      formData.append(\"foto3x4\", this.userData.foto3x4);\r\n      formData.append(\"fotoKtp\", this.userData.fotoKtp);\r\n\r\n      try {\r\n        // Send the form data to the server\r\n        await ApiService.submitPendaftaran(formData);\r\n        this.$router.push({ name: 'success' }); // Redirect to success page\r\n      } catch (error) {\r\n        console.error(\"Pendaftaran failed:\", error);\r\n        alert(\"Pendaftaran gagal. Silakan coba lagi.\");\r\n      } finally {\r\n        this.isLoading = false; // Set loading to false after submission\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.input-field {\r\n  width: 100%;\r\n  padding: 12px;\r\n  margin-bottom: 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  font-size: 16px;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  padding: 6px;\r\n}\r\n\r\nbutton {\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}