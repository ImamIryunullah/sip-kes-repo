{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"http://192.168.1.11:5000\"; // URL backend kamu\n\nconst API = axios.create({\n  baseURL: baseURL\n});\nexport default {\n  registerUser(userData) {\n    return API.post(\"/users/register\", userData);\n  },\n  loginUser(userData) {\n    return API.post(\"/users/login\", userData);\n  },\n  getUserById(id) {\n    return API.get(`/users/${id}`);\n  },\n  getAllUsers(page = 1, limit = 10) {\n    return API.get(`/users?page=${page}&limit=${limit}`);\n  },\n  updateUserProfile(userData) {\n    return API.put(\"/users/update\", userData);\n  },\n  getAllPengaduans(page = 1, limit = 10) {\n    return API.get(`/pengaduan?page=${page}&limit=${limit}`);\n  },\n  // Mendapatkan Pengaduan berdasarkan ID\n  getPengaduanById(id) {\n    return API.get(`/pengaduan/${id}`);\n  },\n  // Membuat Pengaduan Baru\n  createPengaduan(formData) {\n    return API.post(\"/pengaduan\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      console.log(\"Complaint Created:\", response.data);\n      return response.data;\n    }).catch(error => {\n      console.error(\"Error creating complaint:\", error.response ? error.response.data : error.message);\n      throw error;\n    });\n  },\n  // Mengupdate Tindak Lanjut Pengaduan\n  updateTindakLanjut(id, tindakLanjutStatus) {\n    return API.put(`/pengaduan/${id}/tindak-lanjut`, {\n      tindakLanjut: tindakLanjutStatus\n    });\n  },\n  // Menghapus Pengaduan Berdasarkan ID\n  deletePengaduan(id) {\n    return API.delete(`/pengaduan/${id}`);\n  },\n  getPendaftaranById(id) {\n    return API.get(`/pendaftaran/${id}`);\n  },\n  createPendaftaran(formData) {\n    return API.post('/pendaftaran', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log('Pendaftaran berhasil dibuat:', response.data);\n      return response.data;\n    }).catch(error => {\n      console.error('Error creating pendaftaran:', error.response ? error.response.data : error.message);\n      throw error;\n    });\n  },\n  // Mengupdate pendaftaran berdasarkan ID\n  updatePendaftaran(id, formData) {\n    return API.put(`/pendaftaran/${id}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log('Pendaftaran berhasil diperbarui:', response.data);\n      return response.data;\n    }).catch(error => {\n      console.error('Error updating pendaftaran:', error.response ? error.response.data : error.message);\n      throw error;\n    });\n  },\n  // Menghapus pendaftaran berdasarkan ID\n  deletePendaftaran(id) {\n    return API.delete(`/pendaftaran/${id}`).then(response => {\n      console.log('Pendaftaran berhasil dihapus:', response.data);\n      return response.data;\n    }).catch(error => {\n      console.error('Error deleting pendaftaran:', error.response ? error.response.data : error.message);\n      throw error;\n    });\n  },\n  // Upload foto untuk pendaftaran\n  uploadFoto(id, formData) {\n    return API.post(`/pendaftaran/${id}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log('Foto berhasil diupload:', response.data);\n      return response.data;\n    }).catch(error => {\n      console.error('Error uploading foto:', error.response ? error.response.data : error.message);\n      throw error;\n    });\n  }\n};","map":{"version":3,"names":["axios","baseURL","API","create","registerUser","userData","post","loginUser","getUserById","id","get","getAllUsers","page","limit","updateUserProfile","put","getAllPengaduans","getPengaduanById","createPengaduan","formData","headers","then","response","console","log","data","catch","error","message","updateTindakLanjut","tindakLanjutStatus","tindakLanjut","deletePengaduan","delete","getPendaftaranById","createPendaftaran","updatePendaftaran","deletePendaftaran","uploadFoto"],"sources":["C:/Users/IMAM/OneDrive/Desktop/LPKNI/lpkniweb/src/service/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseURL = \"http://192.168.1.11:5000\"; // URL backend kamu\r\n\r\nconst API = axios.create({\r\n  baseURL: baseURL,\r\n});\r\n\r\nexport default {\r\n\r\n  registerUser(userData) {\r\n    return API.post(\"/users/register\", userData);\r\n  },\r\n\r\n  loginUser(userData) {\r\n    return API.post(\"/users/login\", userData);\r\n  },\r\n\r\n  getUserById(id) {\r\n    return API.get(`/users/${id}`);\r\n  },\r\n\r\n  getAllUsers(page = 1, limit = 10) {\r\n    return API.get(`/users?page=${page}&limit=${limit}`);\r\n  },\r\n\r\n  updateUserProfile(userData) {\r\n    return API.put(\"/users/update\", userData);\r\n  },\r\n\r\n  getAllPengaduans(page = 1, limit = 10) {\r\n    return API.get(`/pengaduan?page=${page}&limit=${limit}`);\r\n  },\r\n\r\n  // Mendapatkan Pengaduan berdasarkan ID\r\n  getPengaduanById(id) {\r\n    return API.get(`/pengaduan/${id}`);\r\n  },\r\n\r\n  // Membuat Pengaduan Baru\r\n  createPengaduan(formData) {\r\n    return API.post(\"/pengaduan\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n    .then(response => {\r\n      console.log(\"Complaint Created:\", response.data);\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error creating complaint:\", error.response ? error.response.data : error.message);\r\n      throw error;\r\n    });\r\n  },\r\n\r\n  // Mengupdate Tindak Lanjut Pengaduan\r\n  updateTindakLanjut(id, tindakLanjutStatus) {\r\n    return API.put(`/pengaduan/${id}/tindak-lanjut`, { tindakLanjut: tindakLanjutStatus });\r\n  },\r\n\r\n  // Menghapus Pengaduan Berdasarkan ID\r\n  deletePengaduan(id) {\r\n    return API.delete(`/pengaduan/${id}`);\r\n  },\r\n\r\n  getPendaftaranById(id){\r\n    return API.get(`/pendaftaran/${id}`)\r\n  },\r\n\r\n  createPendaftaran(formData) {\r\n    return API.post('/pendaftaran', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n      .then(response => {\r\n        console.log('Pendaftaran berhasil dibuat:', response.data);\r\n        return response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Error creating pendaftaran:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n      });\r\n  },\r\n\r\n  // Mengupdate pendaftaran berdasarkan ID\r\n  updatePendaftaran(id, formData) {\r\n    return API.put(`/pendaftaran/${id}`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n      .then(response => {\r\n        console.log('Pendaftaran berhasil diperbarui:', response.data);\r\n        return response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Error updating pendaftaran:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n      });\r\n  },\r\n\r\n  // Menghapus pendaftaran berdasarkan ID\r\n  deletePendaftaran(id) {\r\n    return API.delete(`/pendaftaran/${id}`)\r\n      .then(response => {\r\n        console.log('Pendaftaran berhasil dihapus:', response.data);\r\n        return response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Error deleting pendaftaran:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n      });\r\n  },\r\n\r\n  // Upload foto untuk pendaftaran\r\n  uploadFoto(id, formData) {\r\n    return API.post(`/pendaftaran/${id}`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n      .then(response => {\r\n        console.log('Foto berhasil diupload:', response.data);\r\n        return response.data;\r\n      })\r\n      .catch(error => {\r\n        console.error('Error uploading foto:', error.response ? error.response.data : error.message);\r\n        throw error;\r\n      });\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}